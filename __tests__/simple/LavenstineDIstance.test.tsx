// Generated by qodo Gen

import { levenshteinDistance } from "@/utils/searchingUtils";

describe('levenshteinDistance', () => {

    // Calculate distance between two identical strings returns zero
    it('should return zero when both strings are identical', () => {
      const result = levenshteinDistance('example', 'example');
      expect(result).toBe(0);
    });

    // Calculate distance with empty string and non-empty string
    it('should return the length of the non-empty string when one string is empty', () => {
      const result = levenshteinDistance('', 'example');
      expect(result).toBe(7);
    });

    it('should return the corect difference in words', () => {
        const result = levenshteinDistance('exampax', 'example');
        expect(result).toBe(2);
      });

      it('should treat words as different case sensitively', () => {
        const result = levenshteinDistance('Example', 'example');
        expect(result).toBe(1);
      });

      it('should return 0 for empty strings', () => {
        const result = levenshteinDistance('', '');
        expect(result).toBe(0);
      });
});
